package game;

import java.awt.Graphics;
import java.awt.Point;

/**
 * A game element capable of displaying animations
 */
public abstract class GameObject implements Comparable<GameObject> {
	
	protected Sprite sprite;
	public int x, y, z, w, h;
	public boolean visible = true;
	/**
	 * Animations that Sprites can display
	 */
	public enum Animations {
		hydra("hydra", 4, 4);
		
		public String filename;
		public int columns;
		public int frames;
		private Animations(String filename, int columns, int frames) {
			this.filename = filename;
			this.columns = columns;
			this.frames = frames;
		}
	}
	
	/**
	 * Superclass constructor
	 * @param sprite - a Sprite object instantiated by a subclass
	 * @param x - initial x-coordinate in pixels
	 * @param y - initial y-coordinate in pixels
	 * @param z - relative layer to display sprite on-screen
	 * @param w - width of GameObject for collisions in pixels
	 * @param h - height of GameObject for collisions in pixels
	 */
	public GameObject(Sprite sprite, int x, int y, int z, int w, int h) {
		this.sprite = sprite;
		this.x = x;
		this.y = y;
	}
	
	/**
	 * Updates the sprite behavior and animation
	 * @param dt - elapsed time in seconds
	 * @return An array containing horizontal and vertical displacement in pixels
	 */
	public abstract int[] update(double dt);
	
	/**
	 * Checks for ability to collide with another object
	 * @param obj - GameObject being collided with
	 * @return If a collision is allowed between the two GameObjects
	 */
	public abstract boolean isCollidable(GameObject obj);
	
	/**
	 * Renders the sprite
	 * @param g - the Graphics context with appropriate translation and scaling
	 */
	public void draw(Graphics g) {
		if(!visible) return;
		g.translate(x, y);
		sprite.draw(g, this);
		g.translate(-x, -y);
	}
	
	/**
	 * Move GameObject by a set distance
	 * @param dx - horizontal movement in pixels
	 * @param dy - vertical movement in pixels
	 * @param collisions - whether object is prevented from moving through other objects
	 * @return If a collision occurs
	 */
	public boolean move(int dx, int dy, boolean collisions) {
		boolean collided = false;
		x += dx;
		y += dy;
		return collided;
	}
	
	@Override
	public int compareTo(GameObject obj) {
		return z - obj.z;
	}
}